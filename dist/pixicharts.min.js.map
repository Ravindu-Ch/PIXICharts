{"version":3,"file":"pixicharts.min.js","sources":["../src/Utils.js","../src/BarChart.js","../src/PieChart.js"],"names":["window","PIXICharts","charts","PIXI","extend","obj1","obj2","key","hasOwnProperty","colors","_colors","_current","length","BarChart","config","Container","call","this","width","height","autoRedraw","showLabels","showValues","backgroundColor","offset","chartTitle","font","valueFormat","val","labels","data","getColor","background","addChild","Graphics","setBackgroundColor","chartContainer","chart","prototype","Object","create","_drawSector","xPos","_drawValue","position","color","clear","beginFill","drawRect","endFill","setColor","redraw","setLabel","label","setData","value","nextSectorX","total","Bar","PieChart","legend","firstSectorAngle","legendPosition","legendTitle","legendBackgroundColor","legendWidth","legendSize","radius","Math","min","x","y","tempChildren","set","_angle","angle","DEG_TO_RAD","startAngle","percent","endAngle","center","labelPosition","middleAngle","middleRadius","cos","sin","pointA","moveTo","lineTo","arc","textParts","push","text","Text","join","fill","bgPadding","drawRoundedRect","round","anchor","_drawLegend","title","legendCircle","legendLabel","nextY","drawCircle","forEach","child","parent","removeChild","nextSectorStartAngle","Pie"],"mappings":"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","sourcesContent":["// define global PIXICharts object\r\nif ( !window.PIXICharts ) window.PIXICharts = {};\r\n\r\n(function( charts, PIXI ) {\r\n\tcharts.extend = function( obj1, obj2 ) {\r\n\t\tfor (var key in obj2) {\r\n\t\t\tif (obj2.hasOwnProperty(key) && !obj1.hasOwnProperty(key)) {\r\n\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn obj1;\r\n\t};\r\n\r\n\tcharts.colors = function() {\r\n\t\tvar _colors = [0xD26D03, 0x6AC811, 0x718EA6, 0x4E0096, 0x54DB00, 0x77AB45, 0xE0EA1F, 0xB8147A, 0x000332, 0x88553E];\r\n\t\tvar _current = -1;\r\n\t\treturn function() {\r\n\t\t\tif (_current >= _colors.length - 1) {\r\n\t\t\t\t_current = 0;\r\n\t\t\t} else {\r\n\t\t\t\t_current++;\r\n\t\t\t}\r\n\t\t\treturn _colors[_current];\r\n\t\t};\r\n\t};\r\n})( PIXICharts, PIXI );","(function( charts, PIXI ) {\n\tvar BarChart = function( config ) {\n\t\tPIXI.Container.call(this);\n\n\t\t// extend the config with default options\n\t\tthis.config = charts.extend(config || {}, {\n\t\t\twidth: 340,\n\t\t\theight: 200,\n\t\t\tautoRedraw: false,\n\t\t\tshowLabels: true,\n\t\t\tshowValues: true,\n\t\t\tbackgroundColor: null,\n\t\t\toffset: 10,\n\t\t\tchartTitle: null,\n\t\t\tfont: 'Arial',\n\t\t\tvalueFormat: function(val) { return val; }\n\t\t});\n\n\t\tthis.labels = {};\n\t\tthis.colors = {};\n\t\tthis.data = {};\n\n\t\t// getColor util\n\t\tthis.getColor = charts.colors();\n\n\t\t// background element\n\t\tthis.background = this.addChild( new PIXI.Graphics() );\n\t\tthis.setBackgroundColor( this.config.backgroundColor );\n\n\t\t// create chart container\n\t\tthis.chartContainer = this.addChild(new PIXI.Container());\n\t\tthis.chart = this.chartContainer.addChild(new PIXI.Graphics);\n\t};\n\n\tBarChart.prototype = Object.create( PIXI.Container.prototype );\n\n\tcharts.extend(BarChart.prototype, {\n\t\t_drawSector: function( xPos, key ) {\n\t\t\t// this._drawValue(key, labelPosition);\n\t\t\t// return nextSectorX;\n\t\t},\n\n\t\t// draws the value (if needed) at given point\n\t\t_drawValue: function( key, position ) {\n\t\t\tif (!this.config.showValues && !this.config.showLabels) return;\n\t\t},\n\n\t\tsetBackgroundColor: function( color ) {\n\t\t\tthis.background.clear();\n\t\t\tif (!color) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.background\n\t\t\t\t\t.beginFill(color)\n\t\t\t\t\t.drawRect(0, 0, this.config.width, this.config.height)\n\t\t\t\t\t.endFill();\n\n\t\t\treturn this;\n\t\t},\n\n\t\tsetColor: function( key, color ) {\n\t\t\tthis.colors[ key ] = color;\n\t\t\tif ( this.config.autoRedraw ) {\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\tsetLabel: function( key, label ) {\n\t\t\tthis.labels[ key ] = label;\n\t\t\tif ( this.config.autoRedraw ) {\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\tsetData: function( key, value ) {\n\t\t\tthis.data[ key ] = value;\n\t\t\tif (!this.labels[key]) {\n\t\t\t\tthis.setLabel(key, key);\n\t\t\t}\n\t\t\tif ( this.config.autoRedraw ) {\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\tredraw: function() {\n\t\t\tvar nextSectorX = this.config.offset;\n\n\t\t\tfor (var key in this.data) {\n\t\t\t\tif ( !this.data.hasOwnProperty(key) ) continue;\n\t\t\t\ttotal += this.data[key];\n\t\t\t}\n\n\t\t\tfor (var key in this.data) {\n\t\t\t\tif ( !this.data.hasOwnProperty(key) ) continue;\n\t\t\t\tif (!this.colors[key]) {\n\t\t\t\t\tthis.setColor(key, this.getColor());\n\t\t\t\t}\n\t\t\t\tnextSectorX = this._drawSector(nextSectorX, key);\n\t\t\t}\n\t\t}\n\t});\n\n\t// expose BarChart into the charts object\n\tcharts.Bar = BarChart;\n})( PIXICharts, PIXI );","(function( charts, PIXI ) {\r\n\tvar PieChart = function( config ) {\r\n\t\tPIXI.Container.call(this);\r\n\r\n\t\t// extend the config with default options\r\n\t\tthis.config = charts.extend(config || {}, {\r\n\t\t\twidth: 340,\r\n\t\t\theight: 200,\r\n\t\t\tautoRedraw: false,\r\n\t\t\tshowLabels: false,\r\n\t\t\tshowValues: true,\r\n\t\t\tlegend: true,\r\n\t\t\tfirstSectorAngle: 0,\r\n\t\t\tbackgroundColor: null,\r\n\t\t\tlegendPosition: 'right',\r\n\t\t\toffset: 10,\r\n\t\t\tchartTitle: null,\r\n\t\t\tlegendTitle: 'Legend:',\r\n\t\t\tlegendBackgroundColor: 0xAAAAAA,\r\n\t\t\tfont: 'Arial',\r\n\t\t\tvalueFormat: function(val) { return val; },\r\n\t\t\tlegendWidth: 40 // percents\r\n\t\t});\r\n\r\n\t\tthis.labels = {};\r\n\t\tthis.colors = {};\r\n\t\tthis.data = {};\r\n\r\n\t\t// calculate legend size\r\n\t\tif ( this.config.legend ) {\r\n\t\t\tthis.legendSize = {\r\n\t\t\t\twidth: this.config.width * (this.config.legendWidth / 100),\r\n\t\t\t\theight: this.config.height\r\n\t\t\t};\r\n\t\t} else { // if there's no legend - set size to 0x0\r\n\t\t\tthis.legendSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// auto radius calculation\r\n\t\tif (!this.config.radius) {\r\n\t\t\tthis.config.radius = (Math.min(this.config.width - this.legendSize.width, this.config.height) / 2) - this.config.offset;\r\n\t\t}\r\n\r\n\t\t// auto chart position\r\n\t\tif (!this.config.position) {\r\n\t\t\tthis.config.position = {\r\n\t\t\t\tx: (this.config.width - this.legendSize.width) / 2,\r\n\t\t\t\ty: this.config.height / 2\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// getColor util\r\n\t\tthis.getColor = charts.colors();\r\n\r\n\t\t// background element\r\n\t\tthis.background = this.addChild( new PIXI.Graphics() );\r\n\t\tthis.setBackgroundColor( this.config.backgroundColor );\r\n\r\n\t\t// chreate chart container\r\n\t\tthis.chartContainer = this.addChild(new PIXI.Container());\r\n\t\tthis.chart = this.chartContainer.addChild(new PIXI.Graphics);\r\n\r\n\t\tthis.tempChildren = [];\r\n\r\n\t\tif ( this.config.legend ) {\r\n\t\t\t// create legend container\r\n\t\t\tthis.legend = this.addChild( new PIXI.Container() );\r\n\r\n\t\t\t// set legend background\r\n\t\t\tif (this.config.legendBackgroundColor) {\r\n\t\t\t\tthis.legend.addChild(\r\n\t\t\t\t\tnew PIXI.Graphics()\r\n\t\t\t\t\t\t.beginFill(this.config.legendBackgroundColor)\r\n\t\t\t\t\t\t.drawRect(0, 0, this.legendSize.width, this.legendSize.height)\r\n\t\t\t\t\t\t.endFill()\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// reposition legend and chart\r\n\t\t\tif ( this.config.legendPosition == 'left' ) {\r\n\t\t\t\tthis.legend.position.set(0, 0);\r\n\t\t\t\tthis.chartContainer.position.set( this.legendSize.width, 0 );\r\n\t\t\t} else { // right\r\n\t\t\t\tthis.legend.position.set(this.config.width - this.legendSize.width, 0);\r\n\t\t\t\tthis.chartContainer.position.set( 0, 0 );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tPieChart.prototype = Object.create( PIXI.Container.prototype );\r\n\r\n\tcharts.extend(PieChart.prototype, {\r\n\t\t_angle: function( angle ) {\r\n\t\t\treturn (angle - 90) * PIXI.DEG_TO_RAD;\r\n\t\t},\r\n\r\n\t\t_drawSector: function( startAngle, percent, key ) {\r\n\t\t\tvar endAngle\t= 360 * (percent / 100) + startAngle,\r\n\t\t\t\tcenter \t\t= {\r\n\t\t\t\t\tx: this.config.position.x,\r\n\t\t\t\t\ty: this.config.position.y\r\n\t\t\t\t},\r\n\t\t\t\tradius\t\t= this.config.radius;\r\n\r\n\t\t\tvar labelPosition = {};\r\n\t\t\tvar middleAngle = (endAngle - startAngle) / 2 + startAngle;\r\n\t\t\tvar middleRadius = radius / 2;\r\n\r\n\t\t\tlabelPosition.x = center.x + middleRadius * Math.cos( this._angle(middleAngle) );\r\n\t\t\tlabelPosition.y = center.y + middleRadius * Math.sin( this._angle(middleAngle) );\r\n\r\n\t\t\tstartAngle = this._angle(startAngle);\r\n\r\n\t\t\tvar pointA = {\r\n\t\t\t\tx: center.x + radius * Math.cos( startAngle ),\r\n\t\t\t\ty: center.y + radius * Math.sin( startAngle )\r\n\t\t\t};\r\n\r\n\t\t\tthis.chart\r\n\t\t\t\t\t.beginFill(this.colors[key], 1)\r\n\t\t\t\t\t.moveTo(center.x, center.y)\r\n\t\t\t\t\t.lineTo(pointA.x, pointA.y)\r\n\t\t\t\t\t.arc(center.x, center.y, radius, startAngle, this._angle(endAngle), false )\r\n\t\t\t\t\t.lineTo(center.x, center.y)\r\n\t\t\t\t\t.endFill();\r\n\r\n\t\t\tthis._drawValue(key, labelPosition);\r\n\r\n\t\t\treturn endAngle;\r\n\t\t},\r\n\r\n\t\t// draws the value (if needed) at given point\r\n\t\t_drawValue: function( key, position ) {\r\n\t\t\tif (!this.config.showValues && !this.config.showLabels) return;\r\n\t\t\tvar textParts = [];\r\n\t\t\tif (this.config.showLabels) {\r\n\t\t\t\ttextParts.push( this.labels[key] ? this.labels[key] : key );\r\n\t\t\t}\r\n\t\t\tif (this.config.showValues) {\r\n\t\t\t\ttextParts.push( this.config.valueFormat(this.data[key]) );\r\n\t\t\t}\r\n\r\n\t\t\tvar text = new PIXI.Text( textParts.join(' '), {\r\n\t\t\t\tfont: '12px ' + this.config.font,\r\n\t\t\t\tfill: 0xFFFFFF\r\n\t\t\t});\r\n\r\n\t\t\tvar bgPadding = 5;\r\n\r\n\t\t\tvar background = new PIXI.Graphics()\r\n\t\t\t\t\t\t\t\t\t\t.beginFill(0x000000, 0.5)\r\n\t\t\t\t\t\t\t\t\t\t.drawRoundedRect(0, 0, text.width + bgPadding * 2, text.height + bgPadding * 2, 5)\r\n\t\t\t\t\t\t\t\t\t\t.endFill();\r\n\r\n\t\t\tthis.tempChildren.push(this.chartContainer.addChild(background));\r\n\t\t\tthis.tempChildren.push(this.chartContainer.addChild(text));\r\n\r\n\r\n\t\t\tposition.x = Math.round(position.x);\r\n\t\t\tposition.y = Math.round(position.y);\r\n\r\n\t\t\ttext.anchor.set(0.5, 0.5);\r\n\t\t\tbackground.position.set(position.x - text.width / 2 - bgPadding, position.y - text.height / 2 - bgPadding);\r\n\t\t\ttext.position.set(position.x, position.y);\r\n\t\t},\r\n\r\n\t\t_drawLegend: function() {\r\n\t\t\tif (!this.config.legend) return;\r\n\r\n\t\t\tvar title = this.legend.addChild(new PIXI.Text(this.config.legendTitle, {\r\n\t\t\t\tfont: '18px Arial'\r\n\t\t\t}));\r\n\r\n\t\t\tthis.tempChildren.push(title);\r\n\r\n\t\t\ttitle.anchor.set(0.5, 0);\r\n\t\t\ttitle.x = (this.config.width * (this.config.legendWidth/100)) / 2;\r\n\t\t\ttitle.y = this.config.offset;\r\n\r\n\t\t\tvar nextY = title.height + this.config.offset + 20;\r\n\r\n\t\t\tvar legendCircle, legendLabel;\r\n\r\n\t\t\tvar legendLabel = new PIXI.Text('', {\r\n\t\t\t\tfont: '12px ' + this.config.font\r\n\t\t\t});\r\n\r\n\t\t\tfor (var key in this.labels) {\r\n\t\t\t\tif ( !this.data.hasOwnProperty(key) ) continue;\r\n\r\n\t\t\t\tlegendCircle = new PIXI.Graphics()\r\n\t\t\t\t\t\t\t\t\t\t\t.beginFill( 0xFFFFFF )\r\n\t\t\t\t\t\t\t\t\t\t\t.drawCircle(0, 0, 9)\r\n\t\t\t\t\t\t\t\t\t\t\t.endFill()\r\n\t\t\t\t\t\t\t\t\t\t\t.beginFill( this.colors[key] )\r\n\t\t\t\t\t\t\t\t\t\t\t.drawCircle(0, 0, 8)\r\n\t\t\t\t\t\t\t\t\t\t\t.endFill();\r\n\r\n\t\t\t\tlegendLabel = new PIXI.Text(this.labels[key] || key, {\r\n\t\t\t\t\tfont: '12px ' + this.config.font\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.tempChildren.push(legendCircle);\r\n\t\t\t\tthis.tempChildren.push(legendLabel);\r\n\r\n\t\t\t\tlegendCircle.x = this.config.offset + 9;\r\n\t\t\t\tlegendCircle.y = nextY;\r\n\r\n\t\t\t\tlegendLabel.anchor.set(0, 0.5);\r\n\t\t\t\tlegendLabel.x = this.config.offset + 25;\r\n\t\t\t\tlegendLabel.y = nextY;\r\n\r\n\t\t\t\tnextY += 25;\r\n\r\n\t\t\t\tthis.legend.addChild(legendCircle);\r\n\t\t\t\tthis.legend.addChild(legendLabel);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetBackgroundColor: function( color ) {\r\n\t\t\tthis.background.clear();\r\n\t\t\tif (!color) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tthis.background\r\n\t\t\t\t\t.beginFill(color)\r\n\t\t\t\t\t.drawRect(0, 0, this.config.width, this.config.height)\r\n\t\t\t\t\t.endFill();\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tsetColor: function( key, color ) {\r\n\t\t\tthis.colors[ key ] = color;\r\n\t\t\tif ( this.config.autoRedraw ) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tsetLabel: function( key, label ) {\r\n\t\t\tthis.labels[ key ] = label;\r\n\t\t\tif ( this.config.autoRedraw ) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tsetData: function( key, value ) {\r\n\t\t\tthis.data[ key ] = value;\r\n\t\t\tif (!this.labels[key]) {\r\n\t\t\t\tthis.setLabel(key, key);\r\n\t\t\t}\r\n\t\t\tif ( this.config.autoRedraw ) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tclear: function() {\r\n\t\t\tthis.tempChildren.forEach(function(child) {\r\n\t\t\t\tif (child.parent) {\r\n\t\t\t\t\tchild.parent.removeChild(child);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.tempChildren = [];\r\n\t\t\tthis.chart.clear();\r\n\t\t},\r\n\r\n\t\tredraw: function() {\r\n\t\t\tthis.clear();\r\n\r\n\t\t\tvar total = 0,\r\n\t\t\t\tnextSectorStartAngle = this.config.firstSectorAngle;\r\n\r\n\t\t\tfor (var key in this.data) {\r\n\t\t\t\tif ( !this.data.hasOwnProperty(key) ) continue;\r\n\t\t\t\ttotal += this.data[key];\r\n\t\t\t}\r\n\r\n\t\t\tfor (var key in this.data) {\r\n\t\t\t\tif ( !this.data.hasOwnProperty(key) ) continue;\r\n\t\t\t\tif (!this.colors[key]) {\r\n\t\t\t\t\tthis.setColor(key, this.getColor());\r\n\t\t\t\t}\r\n\t\t\t\tnextSectorStartAngle = this._drawSector(nextSectorStartAngle, (this.data[key] / total) * 100, key);\r\n\t\t\t}\r\n\r\n\t\t\tthis._drawLegend();\r\n\t\t}\r\n\t});\r\n\r\n\t// expose PieChart into the charts object\r\n\tcharts.Pie = PieChart;\r\n})( PIXICharts, PIXI );"]}